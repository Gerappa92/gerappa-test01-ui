{"version":3,"sources":["Components/Home/Home.jsx","Components/Menu/Pizza/Pizza.jsx","Components/Menu/PizzaInputs/PizzaInputs.jsx","Components/Menu/Menu.jsx","Components/Client/ClientInputs.jsx","Components/Order/OrderList.jsx","Components/Order/Order.jsx","Components/_AppRouter/AppRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","Component","Pizza","deletePizza","fetch","config","apiUrl","props","pizza","id","method","headers","then","refreshMenu","this","name","vegetarian","style","color","paddingLeft","price","description","to","onClick","PizzaInputs","type","value","onChange","handleInputChange","disabled","checked","Menu","setError","errorMsg","setState","handleInputName","length","response","json","Array","event","target","addons","String","split","newPrice","prevState","handleSubmit","preventDefault","state","body","JSON","stringify","ok","Error","catch","error","console","map","p","key","onSubmit","ClientInputs","client","phoneNumber","houseNumber","flatNumber","zipCode","city","street","OrderItem","Order","getOrders","orders","handleClientInputChange","match","params","first","order","AppRouter","getMenu","exact","path","component","App","className","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d29c6522.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>Hello Gerappa Pizza!</h1>\r\n        </div>\r\n        <div>\r\n          <p>Welcome to my pizza house :)</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport config from \"../../../config.json\";\r\n\r\nclass Pizza extends Component {\r\n  deletePizza = () => {\r\n    fetch(config.apiUrl + \"pizza/\" + this.props.pizza.id, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(() => {\r\n      if (this.props.refreshMenu) {\r\n        this.props.refreshMenu();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>{this.props.pizza.name} </h4>\r\n        {this.props.pizza.vegetarian && (\r\n          <p style={{ color: \"green\", paddingLeft: \"5px\" }}>V</p>\r\n        )}\r\n        <p>{this.props.pizza.price} z≈Ç</p>\r\n        <div>\r\n          <p>{this.props.pizza.description}</p>\r\n        </div>\r\n        <button>\r\n          <Link to={`/Order/${this.props.pizza.name}`}>Order</Link>\r\n        </button>\r\n        <button style={{ color: \"red\" }} onClick={this.deletePizza}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pizza;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PizzaInputs extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <label>\r\n          Name:{\" \"}\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            value={this.props.pizza.name}\r\n            onChange={this.props.handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Description:{\" \"}\r\n          <input\r\n            type='text'\r\n            name='description'\r\n            value={this.props.pizza.description}\r\n            onChange={this.props.handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Price:{\" \"}\r\n          <input\r\n            type='number'\r\n            name='price'\r\n            value={this.props.pizza.price}\r\n            disabled={true}\r\n          />\r\n        </label>\r\n        <label>\r\n          Vegetarian:{\" \"}\r\n          <input\r\n            type='checkbox'\r\n            name='vegetarian'\r\n            checked={this.props.pizza.vegetarian}\r\n            onChange={this.props.handleInputChange}\r\n          />\r\n        </label>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PizzaInputs;\r\n","import React, { Component } from \"react\";\r\nimport Pizza from \"./Pizza/Pizza\";\r\nimport PizzaInputs from \"./PizzaInputs/PizzaInputs\";\r\nimport config from \"../../config.json\";\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorMsg: \"\",\r\n      pizza: {\r\n        name: \"\",\r\n        description: \"sos pomidorowy, ser, bazylia\",\r\n        price: 20,\r\n        vegetarian: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.refreshMenu();\r\n  }\r\n\r\n  setError = (errorMsg) => {\r\n    this.setState({ errorMsg });\r\n  };\r\n\r\n  handleInputName = (value) => {\r\n    if (value.length > 3) {\r\n      fetch(config.apiUrl + \"pizza/names/\" + value)\r\n        .then((response) => response.json())\r\n        .then((pizza) => {\r\n          if (pizza instanceof Array && pizza.length > 0) {\r\n            this.setError(\"Istnieje pizza o takiej nazwie\");\r\n          } else {\r\n            this.setError(\"\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    let value;\r\n    if (name === \"vegetarian\") {\r\n      value = target.checked;\r\n    } else {\r\n      value = target.value;\r\n    }\r\n\r\n    this.name === \"name\" && this.handleInputName(value);\r\n\r\n    if (name === \"description\") {\r\n      const addons = String(value).split(\",\").length;\r\n      const newPrice = addons > 3 ? addons * 5 + 10 : 20;\r\n      this.setState((prevState) => ({\r\n        pizza: {\r\n          ...prevState.pizza,\r\n          price: newPrice,\r\n        },\r\n      }));\r\n    }\r\n\r\n    this.setState((prevState) => ({\r\n      pizza: {\r\n        ...prevState.pizza,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const refreshMenu = this.props.refreshMenu;\r\n\r\n    if (this.state.errorMsg.length > 0) return;\r\n\r\n    if (!this.state.pizza.description || !this.state.pizza.name) {\r\n      this.setState({ errorMsg: \"Uzupe≈Çnij pola!\" });\r\n      return;\r\n    } else {\r\n      this.setState({ errorMsg: \"\" });\r\n    }\r\n\r\n    fetch(config.apiUrl + \"pizza/create\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(this.state.pizza),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.json());\r\n        }\r\n        refreshMenu();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>Menu</h1>\r\n        </div>\r\n        <div>\r\n          <p>The best pizza in the town</p>\r\n          {this.props.pizza.map((p) => (\r\n            <Pizza key={p.id} pizza={p} refreshMenu={this.refreshMenu} />\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <h3>You can create your own pizza here! :)</h3>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <PizzaInputs\r\n              pizza={this.state.pizza}\r\n              handleInputChange={this.handleInputChange}></PizzaInputs>\r\n            {this.state.errorMsg.length === 0 && (\r\n              <input type='submit' value='submit' />\r\n            )}\r\n          </form>\r\n          <p style={{ color: \"red\" }}>{this.state.errorMsg}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ClientInputs extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <label>\r\n            Name:{\" \"}\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              value={this.props.client.name}\r\n              onChange={this.props.handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Phone number:{\" \"}\r\n            <input\r\n              type='text'\r\n              name='phoneNumber'\r\n              value={this.props.client.phoneNumber}\r\n              onChange={this.props.handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            House Number:{\" \"}\r\n            <input\r\n              type='text'\r\n              name='houseNumber'\r\n              value={this.props.client.houseNumber}\r\n              onChange={this.props.handleInputChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Flat Number:{\" \"}\r\n            <input\r\n              type='text'\r\n              name='flatNumber'\r\n              value={this.props.client.flatNumber}\r\n              onChange={this.props.handleInputChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Zip code:{\" \"}\r\n            <input\r\n              type='text'\r\n              name='zipCode'\r\n              value={this.props.client.zipCode}\r\n              onChange={this.props.handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            City:{\" \"}\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={this.props.client.city}\r\n              onChange={this.props.handleInputChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Street:{\" \"}\r\n            <input\r\n              type='text'\r\n              name='street'\r\n              value={this.props.client.street}\r\n              onChange={this.props.handleInputChange}\r\n            />\r\n          </label>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientInputs;\r\n","import React, { Component } from \"react\";\r\n\r\nclass OrderItem extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          {this.props.pizza.name} - {this.props.client.name}\r\n        </p>\r\n        <p>\r\n          {this.props.client.city} {this.props.client.street}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderItem;\r\n","import React, { Component } from \"react\";\r\nimport PizzaInputs from \"../Menu/PizzaInputs/PizzaInputs\";\r\nimport ClientInputs from \"../Client/ClientInputs\";\r\nimport OrderItem from \"./OrderList\";\r\nimport config from \"../../config.json\";\r\n\r\nclass Order extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pizza: {\r\n        name: this.props.match.params.name,\r\n        description: \"\",\r\n        price: 20,\r\n        vegetarian: false,\r\n      },\r\n      client: {\r\n        name: \"\",\r\n        phoneNumber: \"\",\r\n        houseNumber: \"\",\r\n        flatNumber: \"\",\r\n        zipCode: \"\",\r\n        city: \"\",\r\n        street: \"\",\r\n      },\r\n      orders: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(config.apiUrl + \"pizza/names/\" + this.state.pizza.name)\r\n      .then((response) => response.json())\r\n      .then((pizza) => {\r\n        if (pizza instanceof Array && pizza.length > 0) {\r\n          let first = pizza[0];\r\n          this.setState({ pizza: first });\r\n        }\r\n      });\r\n\r\n    this.getOrders();\r\n  }\r\n\r\n  getOrders = () => {\r\n    fetch(config.apiUrl + \"order/all\")\r\n      .then((response) => response.json())\r\n      .then((orders) => {\r\n        if (orders instanceof Array && orders.length > 0) {\r\n          this.setState({ orders });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleClientInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    let value = target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      client: {\r\n        ...prevState.client,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(config.apiUrl + \"order/create\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(this.state),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.json());\r\n        }\r\n        this.getOrders();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>Order</h1>\r\n        </div>\r\n        <div>\r\n          <p>This is a place where you can order the pizza!</p>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h3>Pizza {this.state.name}</h3>\r\n          <div>\r\n            <PizzaInputs\r\n              handleInputChange={() => 0}\r\n              pizza={this.state.pizza}></PizzaInputs>\r\n          </div>\r\n          <h3>Delivery information:</h3>\r\n          <div>\r\n            <ClientInputs\r\n              handleInputChange={this.handleClientInputChange}\r\n              client={this.state.client}\r\n            />\r\n          </div>\r\n          <input type='submit' value='submit' />\r\n        </form>\r\n        {this.state.orders.map((order) => (\r\n          <OrderItem pizza={order.pizza} client={order.client} />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"../Home/Home\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Order from \"../Order/Order\";\r\nimport config from \"../../config.json\";\r\n\r\nclass AppRouter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pizza: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMenu();\r\n  }\r\n\r\n  getMenu = () => {\r\n    fetch(config.apiUrl + \"pizza/all\")\r\n      .then((response) => response.json())\r\n      .then((pizza) => this.setState({ pizza }))\r\n      .catch((error) => console.error(\"Menu problem:\", error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Link to=''>Gerappa Pizza</Link>\r\n        <Link to='/Menu'>Menu</Link>\r\n        <Switch>\r\n          <Route exact path='/Menu'>\r\n            <Menu pizza={this.state.pizza} refreshMenu={this.getMenu} />\r\n          </Route>\r\n          <Route path='/Order/:name' component={Order}></Route>\r\n          <Route exact path=''>\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./Components/_AppRouter/AppRouter\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header>Gerappa Pizza</header>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}